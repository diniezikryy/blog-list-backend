{"version":3,"sources":["services/blogs.js","components/Blog.js","components/Notification.js","components/LoginForm.js","components/BlogForm.js","components/Toggle.js","services/login.js","App.js","index.js"],"names":["config","Blog","blog","updateBlog","removeBlog","userId","useState","visible","setVisible","showWhenVisible","display","blogObject","setBlogObject","user","id","blogUserId","buttonLabel","style","paddingTop","paddingLeft","border","borderWidth","marginBottom","title","author","onClick","url","likes","updatedBlog","Notification","errorMessage","successMessage","className","LoginForm","handleSubmit","setUsername","setPassword","username","password","onSubmit","value","onChange","target","type","BlogForm","createBlog","newTitle","setNewTitle","newAuthor","setNewAuthor","newURL","setNewURL","event","preventDefault","Toggle","React","forwardRef","ref","children","hideWhenVisible","toggleVisibility","useImperativeHandle","baseUrl","token","getAll","axios","get","then","response","data","create","newObject","a","headers","Authorization","post","setToken","newToken","update","objectToUpdate","put","remove","delete","login","credentials","App","blogs","setBlogs","setErrorMessage","setSuccessMessage","setUser","useEffect","blogService","loggedUserJSON","window","localStorage","getItem","JSON","parse","handleLogin","loginService","setItem","stringify","name","setTimeout","handleLogout","clear","blogToAdd","blogFormRef","current","addedBlog","concat","blogToUpdate","map","blogToRemove","confirm","filter","exception","console","log","useRef","sort","b1","b2","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1fb9b4af.chunk.js","sourcesContent":["import axios from \"axios\";\nconst baseUrl = \"/api/blogs\";\n\nlet token = null;\n\nlet config;\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`;\n  config = {\n    headers: { Authorization: token },\n  };\n};\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = async (newObject) => {\n  const config = {\n    headers: { Authorization: token },\n  };\n  const response = await axios.post(baseUrl, newObject, config);\n  return response.data;\n};\n\nconst update = async (objectToUpdate) => {\n  const response = await axios.put(\n    `${baseUrl}/${objectToUpdate.id}`,\n    objectToUpdate,\n    config\n  );\n  return response.data;\n};\n\nconst remove = async (id) => {\n  const response = await axios.delete(`${baseUrl}/${id}`, config);\n  return response.data;\n};\n\nexport default { getAll, create, setToken, update, remove };\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Blog = ({ blog, updateBlog, removeBlog, userId }) => {\n  const [visible, setVisible] = useState(false);\n  const showWhenVisible = { display: visible ? \"\" : \"none\" };\n  const [blogObject, setBlogObject] = useState(blog);\n  const [blogUserId, setBlogUserId] = useState(blog.user?.id);\n\n  const toggleVisibility = () => {\n    setVisible(!visible);\n  };\n\n  const buttonLabel = visible ? \"hide\" : \"show\";\n\n  const increaseLikes = () => {\n    const updatedBlog = {\n      ...blog,\n      likes: blog.likes + 1,\n    };\n    updateBlog(updatedBlog);\n    setBlogObject(updatedBlog);\n  };\n\n  const deleteBlog = () => removeBlog(blog);\n\n  const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: \"solid\",\n    borderWidth: 1,\n    marginBottom: 5,\n  };\n\n  const checkLoggedInUser = () => {\n    return blogUserId === userId;\n  };\n\n  return (\n    <div style={blogStyle}>\n      <div>\n        <p>\n          <b>{blogObject.title}</b> by {blogObject.author}{\" \"}\n          <button onClick={toggleVisibility}>{buttonLabel}</button>\n        </p>\n        <div style={showWhenVisible}>\n          <p>Url: {blogObject.url}</p>\n          <p>\n            Likes: {blogObject.likes}{\" \"}\n            <button onClick={increaseLikes}>like</button>\n          </p>\n          <div>\n            {checkLoggedInUser() ? (\n              <button onClick={deleteBlog}>Delete</button>\n            ) : (\n              \"\"\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nBlog.propTypes = {\n  blog: PropTypes.object.isRequired,\n  updateBlog: PropTypes.func.isRequired,\n  removeBlog: PropTypes.func.isRequired,\n  userId: PropTypes.string.isRequired,\n};\n\nexport default Blog;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Notification = ({ errorMessage, successMessage }) => {\n  if (successMessage === null && errorMessage === null) {\n    return null;\n  } else if (successMessage) {\n    return <div className=\"success\">{successMessage}</div>;\n  } else {\n    return <div className=\"error\">{errorMessage}</div>;\n  }\n};\n\nNotification.propTypes = {\n  errorMessage: PropTypes.string.isRequired,\n  successMessage: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst LoginForm = ({\n  handleSubmit,\n  setUsername,\n  setPassword,\n  username,\n  password,\n}) => {\n  return (\n    <div>\n      <h2>Login</h2>\n\n      <form onSubmit={handleSubmit}>\n        <div>\n          username\n          <input\n            value={username}\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          password\n          <input\n            type=\"password\"\n            value={password}\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <button type=\"submit\">login</button>\n      </form>\n    </div>\n  );\n};\n\nLoginForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  handleUsernameChange: PropTypes.func.isRequired,\n  handlePasswordChange: PropTypes.func.isRequired,\n  username: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired,\n};\n\nexport default LoginForm;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst BlogForm = ({ createBlog }) => {\n  // Add Blog State\n  const [newTitle, setNewTitle] = useState(\"\");\n  const [newAuthor, setNewAuthor] = useState(\"\");\n  const [newURL, setNewURL] = useState(\"\");\n\n  const addBlog = (event) => {\n    event.preventDefault();\n    createBlog({\n      title: newTitle,\n      author: newAuthor,\n      url: newURL,\n    });\n    setNewTitle(\"\");\n    setNewAuthor(\"\");\n    setNewURL(\"\");\n  };\n\n  return (\n    <form onSubmit={addBlog}>\n      <div>\n        Title:{\" \"}\n        <input\n          id=\"title\"\n          value={newTitle}\n          onChange={(event) => {\n            setNewTitle(event.target.value);\n          }}\n        />\n      </div>\n      <div>\n        Author:{\" \"}\n        <input\n          id=\"author\"\n          value={newAuthor}\n          onChange={(event) => {\n            setNewAuthor(event.target.value);\n          }}\n        />\n      </div>\n      <div>\n        Url:{\" \"}\n        <input\n          id=\"url\"\n          value={newURL}\n          onChange={(event) => {\n            setNewURL(event.target.value);\n          }}\n        />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nBlogForm.propTypes = {\n  createBlog: PropTypes.func.isRequired,\n};\n\nexport default BlogForm;\n","import React, { useState, useImperativeHandle } from \"react\";\nimport Proptypes from \"prop-types\";\n\nconst Toggle = React.forwardRef(({ buttonLabel, children }, ref) => {\n  const [visible, setVisible] = useState(false);\n\n  const hideWhenVisible = { display: visible ? \"none\" : \"\" };\n  const showWhenVisible = { display: visible ? \"\" : \"none\" };\n\n  const toggleVisibility = () => {\n    setVisible(!visible);\n  };\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility,\n    };\n  });\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {children}\n        <button onClick={toggleVisibility}>cancel</button>\n      </div>\n    </div>\n  );\n});\n\nToggle.propTypes = {\n  buttonLabel: Proptypes.string.isRequired,\n};\n\nexport default Toggle;\n","import axios from \"axios\";\nconst baseUrl = \"/api/login\";\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials);\n  return response.data;\n};\n\nexport default { login };\n","import React, { useState, useEffect, useRef } from \"react\";\n\nimport Blog from \"./components/Blog\";\nimport Notification from \"./components/Notification\";\nimport LoginForm from \"./components/LoginForm\";\nimport BlogForm from \"./components/BlogForm\";\nimport Toggle from \"./components/Toggle\";\n\nimport blogService from \"./services/blogs\";\nimport loginService from \"./services/login\";\n\nconst App = () => {\n  // Blog State\n  const [blogs, setBlogs] = useState([]);\n\n  // Login State\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  // Error Message State\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    blogService.getAll().then((blogs) => setBlogs(blogs));\n  }, []);\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem(\"loggedBloglistUser\");\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  const handleLogin = async (event) => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password,\n      });\n      window.localStorage.setItem(\"loggedBloglistUser\", JSON.stringify(user));\n      blogService.setToken(user.token);\n      setUser(user);\n      setUsername(\"\");\n      setPassword(\"\");\n      setSuccessMessage(`Welcome, ${user.name}!`);\n      setErrorMessage(null);\n      setTimeout(() => {\n        setSuccessMessage(null);\n      }, 5000);\n    } catch (exception) {\n      setErrorMessage(\"wrong credentials\");\n      setSuccessMessage(null);\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    }\n  };\n\n  const handleLogout = async (event) => {\n    event.preventDefault();\n    window.localStorage.clear();\n    setErrorMessage(`${user.name} has logged out`);\n    setSuccessMessage(null);\n    setTimeout(() => {\n      setErrorMessage(null);\n    }, 5000);\n    setUser(null);\n  };\n\n  const createBlog = async (blogToAdd) => {\n    blogFormRef.current.toggleVisibility();\n    try {\n      const addedBlog = await blogService.create(blogToAdd);\n      setSuccessMessage(\n        `Blog '${blogToAdd.title}' has been successfully added`\n      );\n      setBlogs(blogs.concat(addedBlog));\n      setErrorMessage(null);\n      setTimeout(() => {\n        setSuccessMessage(null);\n      }, 5000);\n    } catch (exception) {\n      setErrorMessage(\"there are missing fields\");\n      setSuccessMessage(null);\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    }\n  };\n\n  const updateBlog = async (blogToUpdate) => {\n    try {\n      const updatedBlog = await blogService.update(blogToUpdate);\n      setSuccessMessage(\n        `Blog ${blogToUpdate.title} has been successfully updated`\n      );\n\n      setBlogs(\n        // if current blog element is not the updated blog element, return the old blog element\n        // else if it tis, return the new updated blog\n        blogs.map((blog) => (blog.id !== blogToUpdate.id ? blog : updatedBlog))\n      );\n      setErrorMessage(null);\n      setTimeout(() => {\n        setSuccessMessage(null);\n      }, 5000);\n    } catch (exception) {\n      setErrorMessage(`Cannot update blog ${blogToUpdate.title}`);\n      setSuccessMessage(null);\n      setTimeout(() => {\n        setSuccessMessage(null);\n      }, 5000);\n    }\n  };\n\n  const removeBlog = async (blogToRemove) => {\n    try {\n      if (window.confirm(`Delete ${blogToRemove.title} ?`)) {\n        blogService.remove(blogToRemove.id);\n        setSuccessMessage(\n          `Blog ${blogToRemove.title} was successfully deleted`\n        );\n        setBlogs(blogs.filter((blog) => blog.id !== blogToRemove.id));\n        setErrorMessage(null);\n        setTimeout(() => {\n          setSuccessMessage(null);\n        }, 5000);\n      }\n    } catch (exception) {\n      console.log(exception);\n      setErrorMessage(`Cannot remove blog ${blogToRemove.title}`);\n      setSuccessMessage(null);\n      setTimeout(() => {\n        setSuccessMessage(null);\n      }, 5000);\n    }\n  };\n\n  const blogFormRef = useRef();\n\n  const blogForm = () => (\n    <Toggle buttonLabel=\"Add Blog\" ref={blogFormRef}>\n      <BlogForm createBlog={createBlog} />\n    </Toggle>\n  );\n\n  const loginForm = () => (\n    <Toggle buttonLabel=\"log in\">\n      <LoginForm\n        username={username}\n        password={password}\n        setUsername={setUsername}\n        setPassword={setPassword}\n        handleSubmit={handleLogin}\n      />\n    </Toggle>\n  );\n\n  const sortByLikes = (b1, b2) => {\n    return b2.likes - b1.likes;\n  };\n\n  return (\n    <div>\n      <h1>'Bookmark' your blogs!</h1>\n      <Notification\n        errorMessage={errorMessage}\n        successMessage={successMessage}\n      />\n\n      {user === null ? (\n        loginForm()\n      ) : (\n        <div>\n          <p>\n            {user.name} logged-in{\" \"}\n            <button onClick={handleLogout} type=\"submit\">\n              logout\n            </button>\n            <div>{blogForm()}</div>\n          </p>\n        </div>\n      )}\n\n      {blogs.sort(sortByLikes).map((blog) => (\n        <Blog\n          key={blog.id}\n          blog={blog}\n          updateBlog={updateBlog}\n          removeBlog={removeBlog}\n          userId={user !== null ? user.id : \"Not logged in\"}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}